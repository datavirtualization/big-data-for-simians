== Best Practices and Pedantic Points of Style ==

Here's a brain dump of things to do or not do

=== File Organization ===

* do not: try to have a uniform naming scheme for all files
* do: have a controlled set of uniform naming scheme for all files
* do: crisply separate production and development

* do not: put one million files in a directory, on either hdfs or local disk 


A filesystem is not a database

There's a tendency -- one that I've only screwed up about nine times 

your filenames start encoding more and more metadata, with files storing simple blobs

these are the features of a datastore

==== Nits ====

* timestamps in "gold" (master) data, this is the complete list of reasonable choices:
  - epoch, as integer or as float (but only when subsecond resolution is appropriate)
  - `YYYYmmddHHMMSSZ`
  - `YYYY-mm-ddTHH:MM:SS+0:00`
  - `YYYYmmdd` and `HHMMSS` as separate columns

==== Truth ====

* managing truth makes up a huge portion of the difficulties in designing systems at scale

* I've lost a lot more time dealing with the problems caused by having multiple versions of a file than dealing with the problems of having *no* versions of that file.



==== At scale ====

* identify SPOF -- there are more than you think
* rate limit dangerous actions


==== Don't ====

* write a static configuration language.
* use XML. If you do use XML, use a disciplined subset that I can parse naively.
* implement your own RPC or data serialization format

* rewrite
  - unless the fundamental conceptual models are unrecognizable. Even then, tread carefully.

Unless any of the following is your full-time job and area of specific expertise, never:

* write a parser
* implement your own security layer
* adopt a programming language unless it has libraries to handle { OAuth over SSL, Hebrew Calendar translation, a simple Matrix Solver, and a LOGO interpreter }
* touch raw sockets
* matrix solver

Proposed rule: "Never adopt a new lang until it has libs for OAuth+SSL, matrix solving, & LOGO"


=== Best Practices

// ==== Choosing variable names ====
// 
// If it's a collection:
// 
// * measure  		      -- quantity being measured: frequency, count, height, etc.
// * free dimensions, pluralized -- dimensions that _don't_ appear in argument list
// * `for`
// * given dimensions, singular  -- arguments, in order.
// 
// If it's a quantity:
// 
// * measure  		      -- quantity being measured: frequency, count, height, etc.
// * given dimensions, singular  -- arguments, in order.
// 
// 
// So:
// 
// 	n_all			# number: sum count across all words, all docs and all cells
// 	f_wd_doc(wd, doc)	# frequency of word in doc
// 	f_wd_for_cell		# frequency of word across all cells and docs
// 	f_wd(wd)		# number: frequency of word across all cells and docs
// 
// 
// 
// 	n_wds_for_doc(doc)     	# counts for word in given doc
// 	n_cells_for_all(cell)	# sum counts for cell across all words
// 	f_wds   		# frequencies of word across all cells/docs
// 	f_wds_for_doc(doc)	# frequencies of word in given doc
